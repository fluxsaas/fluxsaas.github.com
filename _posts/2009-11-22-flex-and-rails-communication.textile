---
layout: post
title: Restful Communication Between Flex And Rails  (GET, POST, PUT)
---

<p class="time-stamp">22 NOVEMBER 2009</p>
<div id="tweetme-iframe">
  <script type="text/javascript">tweetmeme_service = 'bit.ly';</script>
  <script type="text/javascript" src="http://tweetmeme.com/i/scripts/button.js"></script>  
</div>
<h1><a href="{{ page.url }}">{{ page.title }}</a></h1>

h3. Some working examples of HTTPService Requests:

h4. GET Request

{% highlight actionscript %}
  // HTTPService GET Request
  private function getShiftList():void{
    svcShiftsIndex.url = "/schedules/"+scheduleId+"/shifts.xml";
    svcShiftsIndex.send();
  }
{% endhighlight %}

{% highlight xml %}

  <mx:HTTPService id="svcShiftsIndex"
      resultFormat="e4x"
      method="GET"
      fault="handleShiftsIndexFaultResult(event)"
      result="handleShiftsIndexResult(event)" 
    />  

{% endhighlight %}


h4. PUT Request

Make sure to pass the <code>authenticity_token</code> in the url to keep a valid xml structure.

{% highlight ActionScript %}

// HTTPService PUT Request
private function handleShiftChanged(event:*):void{
  svcShiftsUpdate.url = "/schedules/" + scheduleId + 
                        "/shifts/" + event.shift.shiftId + '.xml' + 
                        '?authenticity_token='+authenticityToken;

  var params:XML = XML(
    '<shift>'+
      '<category_id>1</category_id>'+
    '</shift>'
  );

  svcShiftsUpdate.method  = 'POST';
  
  // IMPORTANT TO CONNECT TO THE PUT ACTION IN RAILS
  svcShiftsUpdate.headers = {
    X_HTTP_METHOD_OVERRIDE: 'PUT'
  };

  svcShiftsUpdate.send(params);
}     

{% endhighlight %}


{% highlight xml %}
  <mx:HTTPService id="svcShiftsCreate"
      contentType="application/xml"
      resultFormat="e4x"
      method="POST"
      fault="handleShiftsCreateFaultResult(event)"
      result="handleShiftsCreateResult(event)" 
    />  
{% endhighlight %}


h4. POST Request

Make sure to pass the authenticity_token in the url to keep a valid xml structure.

{% highlight actionscript %}
  // HTTPService POST Request
  private function handleShiftCreated(event:ShiftControllerEvent):void {
    svcShiftsCreate.url = "/schedules/" + scheduleId + 
                          "/shifts.xml?authenticity_token="+authenticityToken;

    var xmlParams:XML = XML(
      '<shift>'+
        '<category_id>1</category_id>'+
      '</shift>'
    );

    svcShiftsCreate.send(xmlParams);
    ShiftSequencer.reDrawShifts();
  }  
{% endhighlight %}

{% highlight xml %}
  <mx:HTTPService id="svcShiftsUpdate"
      contentType="application/xml"  
      resultFormat="e4x"
      result="handleShiftsUpdateResult(event)"
      fault="handleShiftsUpdateFaultResult(event)"
    />    
{% endhighlight %}


*Ressources:*
* "blog.dt.org":http://blog.dt.org/index.php/tag/flex/
* "Adobe":http://tinyurl.com/yde2k8z


